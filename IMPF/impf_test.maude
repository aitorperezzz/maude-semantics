load impf_semantics.maude .

*** Multiply two numbers calling a function
rew < 
function 'z = 'multiply ( 'x, 'y ) 
	'z := 'x *. 'y 
endfunction 
	'a := 3 ;
	'b := 1 ; 
	'c := 'multiply ( 'a, 'b *. 2 ) 
, EmptyMem > .


*** Multiply two numbers the usual way
rew < 
	'b := 2 ; 
	'a := 10 *. 'b 
, EmptyMem > .


*** When a function needs no arguments, self as asrgument is needed
rew < 
function 'z = 'multiply ( self ) 
	'z := 3 *. 2 
endfunction 
	'c := 'multiply ( self ) 
, EmptyMem > . 


rew <  
( function 'z = 'factorial ( 'x )  
	if ( 'x B= 1 ) then 
		( 'z := 1 ) 
	else 
		( 'z := 'x *. ( 'factorial ( 'x -. 1 ) ) ) 
endfunction ) 
	'a := 5 ; 
	'f := ( 'factorial ( 'a ) ) 	 
, EmptyMem > .


rew <  
( function 'z = 'primera ( 'x, 'y ) 
	'z := 'x *. 'segunda ( 'y ) 
endfunction 
function 'z = 'segunda ( 'x ) 
	'z := 'x *. 'x 
endfunction ) 	
	'a := 5 ; 
	'b := 3 ;
	'f := ( 'primera ( 'a, 'b ) ) 	 
, EmptyMem > . 
